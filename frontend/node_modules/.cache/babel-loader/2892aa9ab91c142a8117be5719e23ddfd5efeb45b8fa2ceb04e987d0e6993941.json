{"ast":null,"code":"const configForApi = {\n  url: 'api.ogsmit.nomoredomains.monster',\n  headers: {\n    'authorization': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NDZlMWQwNTM2Y2UwYzAwMWE0MTdmODYiLCJpYXQiOjE2ODQ5MzgwMTN9.u9SjO-asPl3C4HZ6OC6WwHSNjpd1jXZLWIDwQ4yCgEQ',\n    'Content-Type': 'application/json'\n  }\n};\nclass Api {\n  constructor(config) {\n    this.url = config.url;\n    this.headers = config.headers;\n  }\n  getInitialCard() {\n    return fetch(`${this.url}/cards`, {\n      headers: this.headers\n    }).then(this._checkResponse);\n  }\n  getProfile() {\n    return fetch(`${this.url}/users/me`, {\n      headers: this.headers\n    }).then(this._checkResponse);\n  }\n  removeCard(cardId) {\n    return fetch(`${this.url}/cards/${cardId}`, {\n      method: 'DELETE',\n      headers: this.headers\n    }).then(this._checkResponse);\n  }\n  addCard(objectFromInputs) {\n    return fetch(`${this.url}/cards`, {\n      method: 'POST',\n      headers: this.headers,\n      body: JSON.stringify({\n        name: objectFromInputs.name,\n        link: objectFromInputs.link\n      })\n    }).then(this._checkResponse);\n  }\n  editAvatar(objectFromInputs) {\n    return fetch(`${this.url}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this.headers,\n      body: JSON.stringify({\n        avatar: objectFromInputs.avatar\n      })\n    }).then(this._checkResponse);\n  }\n  editProfile(objectFromInputs) {\n    return fetch(`${this.url}/users/me`, {\n      method: 'PATCH',\n      headers: this.headers,\n      body: JSON.stringify({\n        name: objectFromInputs.name,\n        about: objectFromInputs.about\n      })\n    }).then(this._checkResponse);\n  }\n  addlikeCard(cardId) {\n    return fetch(`${this.url}/cards/${cardId}/likes`, {\n      method: 'PUT',\n      headers: this.headers\n    }).then(this._checkResponse);\n  }\n  removelikeCard(cardId) {\n    return fetch(`${this.url}/cards/${cardId}/likes`, {\n      method: 'DELETE',\n      headers: this.headers\n    }).then(this._checkResponse);\n  }\n  _checkResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Ошибка: ${res.status}`);\n  }\n}\nconst api = new Api(configForApi);\nexport default api;","map":{"version":3,"names":["configForApi","url","headers","Api","constructor","config","getInitialCard","fetch","then","_checkResponse","getProfile","removeCard","cardId","method","addCard","objectFromInputs","body","JSON","stringify","name","link","editAvatar","avatar","editProfile","about","addlikeCard","removelikeCard","res","ok","json","Promise","reject","status","api"],"sources":["C:/Users/og88t/dev/react-mesto-api-full-gha/frontend/src/utils/Api.js"],"sourcesContent":["const configForApi = {\r\n  url: 'api.ogsmit.nomoredomains.monster',\r\n  headers: {\r\n    'authorization': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NDZlMWQwNTM2Y2UwYzAwMWE0MTdmODYiLCJpYXQiOjE2ODQ5MzgwMTN9.u9SjO-asPl3C4HZ6OC6WwHSNjpd1jXZLWIDwQ4yCgEQ',\r\n    'Content-Type': 'application/json'\r\n  }\r\n}\r\n\r\nclass Api {\r\n  constructor(config) {\r\n    this.url = config.url;\r\n    this.headers = config.headers;\r\n  }\r\n\r\n  getInitialCard() {\r\n    return fetch(`${this.url}/cards`, {\r\n      headers: this.headers\r\n    }).then(this._checkResponse)\r\n  }\r\n\r\n  getProfile() {\r\n    return fetch(`${this.url}/users/me`, {\r\n      headers: this.headers\r\n    }).then(this._checkResponse)\r\n  }\r\n\r\n  removeCard(cardId) {\r\n    return fetch(`${this.url}/cards/${cardId}`, {\r\n      method: 'DELETE',\r\n      headers: this.headers\r\n    }).then(this._checkResponse)\r\n  }\r\n\r\n  addCard(objectFromInputs) {\r\n    return fetch(`${this.url}/cards`, {\r\n      method: 'POST',\r\n      headers: this.headers,\r\n      body: JSON.stringify({\r\n        name: objectFromInputs.name,\r\n        link: objectFromInputs.link \r\n      })\r\n    }).then(this._checkResponse)\r\n  }\r\n\r\n  editAvatar(objectFromInputs) {\r\n    return fetch(`${this.url}/users/me/avatar`, {\r\n      method: 'PATCH',\r\n      headers: this.headers,\r\n      body: JSON.stringify({\r\n        avatar: objectFromInputs.avatar\r\n      })\r\n    }).then(this._checkResponse)\r\n  };\r\n\r\n  editProfile(objectFromInputs) {\r\n    return fetch(`${this.url}/users/me`, {\r\n      method: 'PATCH',\r\n      headers: this.headers,\r\n      body: JSON.stringify({\r\n        name: objectFromInputs.name,\r\n        about: objectFromInputs.about\r\n      })\r\n    }).then(this._checkResponse)\r\n  }\r\n\r\n  addlikeCard(cardId) {\r\n    return fetch(`${this.url}/cards/${cardId}/likes`, {\r\n      method: 'PUT',\r\n      headers: this.headers\r\n    }).then(this._checkResponse)\r\n  }\r\n\r\n  removelikeCard(cardId) {\r\n    return fetch(`${this.url}/cards/${cardId}/likes`, {\r\n      method: 'DELETE',\r\n      headers: this.headers\r\n    }).then(this._checkResponse)\r\n  }\r\n\r\n  _checkResponse(res) {\r\n    if(res.ok) {\r\n      return res.json();\r\n    }\r\n    return Promise.reject(`Ошибка: ${res.status}`)\r\n  }\r\n}\r\n\r\nconst api = new Api(configForApi);\r\n\r\nexport default api;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}