{"ast":null,"code":"export var BASE_URL='https://auth.nomoreparties.co';function checkResponse(res){if(res.ok){return res.json();}return Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \".concat(res.status));}export var register=function register(password,email){return fetch(\"\".concat(BASE_URL,\"/signup\"),{method:'POST',headers:{'Accept':'application/json','Content-Type':'application/json'},body:JSON.stringify({'email':email,'password':password})}).then(function(res){return checkResponse(res);});};export var authorize=function authorize(password,email){return fetch(\"\".concat(BASE_URL,\"/signin\"),{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({password:password,email:email})}).then(function(res){return checkResponse(res);});};export var tokencheck=function tokencheck(token){return fetch(\"\".concat(BASE_URL,\"/users/me\"),{method:'GET',headers:{'Accept':'application/json','Content-Type':'application/json','Authorization':\"Bearer \".concat(token)}}).then(function(res){return checkResponse(res);});};","map":{"version":3,"names":["BASE_URL","checkResponse","res","ok","json","Promise","reject","concat","status","register","password","email","fetch","method","headers","body","JSON","stringify","then","authorize","tokencheck","token"],"sources":["C:/Users/og88t/dev/react-mesto-api-full-gha/frontend/src/utils/Auth.js"],"sourcesContent":["export const BASE_URL = 'https://auth.nomoreparties.co';\r\n\r\nfunction checkResponse(res) {\r\n  if(res.ok) {\r\n    return res.json();\r\n  }\r\n  return Promise.reject(`Ошибка: ${res.status}`)\r\n} \r\n\r\nexport const register = (password, email) => {\r\n  return fetch(`${BASE_URL}/signup`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Accept': 'application/json',\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({\r\n      'email': email,\r\n      'password': password\r\n\r\n    })\r\n  }).then(res => checkResponse(res))\r\n};\r\n\r\nexport const authorize = (password, email) => {\r\n  return fetch(`${BASE_URL}/signin`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ password, email })\r\n  }).then(res => checkResponse(res))\r\n};\r\n\r\nexport const tokencheck = (token) => {\r\n  return fetch(`${BASE_URL}/users/me`, {\r\n    method: 'GET',\r\n    headers: {\r\n      'Accept': 'application/json',\r\n      'Content-Type': 'application/json',\r\n      'Authorization': `Bearer ${token}`,\r\n    }\r\n  }).then(res => checkResponse(res))\r\n} \r\n"],"mappings":"AAAA,MAAO,IAAM,CAAAA,QAAQ,CAAG,+BAA+B,CAEvD,QAAS,CAAAC,aAAaA,CAACC,GAAG,CAAE,CAC1B,GAAGA,GAAG,CAACC,EAAE,CAAE,CACT,MAAO,CAAAD,GAAG,CAACE,IAAI,EAAE,CACnB,CACA,MAAO,CAAAC,OAAO,CAACC,MAAM,0CAAAC,MAAA,CAAYL,GAAG,CAACM,MAAM,EAAG,CAChD,CAEA,MAAO,IAAM,CAAAC,QAAQ,CAAG,QAAX,CAAAA,QAAQA,CAAIC,QAAQ,CAAEC,KAAK,CAAK,CAC3C,MAAO,CAAAC,KAAK,IAAAL,MAAA,CAAIP,QAAQ,YAAW,CACjCa,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACP,QAAQ,CAAE,kBAAkB,CAC5B,cAAc,CAAE,kBAClB,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CACnB,OAAO,CAAEN,KAAK,CACd,UAAU,CAAED,QAEd,CAAC,CACH,CAAC,CAAC,CAACQ,IAAI,CAAC,SAAAhB,GAAG,QAAI,CAAAD,aAAa,CAACC,GAAG,CAAC,GAAC,CACpC,CAAC,CAED,MAAO,IAAM,CAAAiB,SAAS,CAAG,QAAZ,CAAAA,SAASA,CAAIT,QAAQ,CAAEC,KAAK,CAAK,CAC5C,MAAO,CAAAC,KAAK,IAAAL,MAAA,CAAIP,QAAQ,YAAW,CACjCa,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAEP,QAAQ,CAARA,QAAQ,CAAEC,KAAK,CAALA,KAAM,CAAC,CAC1C,CAAC,CAAC,CAACO,IAAI,CAAC,SAAAhB,GAAG,QAAI,CAAAD,aAAa,CAACC,GAAG,CAAC,GAAC,CACpC,CAAC,CAED,MAAO,IAAM,CAAAkB,UAAU,CAAG,QAAb,CAAAA,UAAUA,CAAIC,KAAK,CAAK,CACnC,MAAO,CAAAT,KAAK,IAAAL,MAAA,CAAIP,QAAQ,cAAa,CACnCa,MAAM,CAAE,KAAK,CACbC,OAAO,CAAE,CACP,QAAQ,CAAE,kBAAkB,CAC5B,cAAc,CAAE,kBAAkB,CAClC,eAAe,WAAAP,MAAA,CAAYc,KAAK,CAClC,CACF,CAAC,CAAC,CAACH,IAAI,CAAC,SAAAhB,GAAG,QAAI,CAAAD,aAAa,CAACC,GAAG,CAAC,GAAC,CACpC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}